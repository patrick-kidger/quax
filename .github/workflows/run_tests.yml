name: Run tests

on:
  pull_request:

env:
  # Many color libraries just need this to be set to any value, but at least
  # one distinguishes color depth, where "3" -> "256-bit color".
  FORCE_COLOR: 3

jobs:
  format:
    name: format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Checks with pre-commit
        uses: pre-commit/action@v3.0.1

  run-test:
    needs: [format]
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.13" ]
        os: [ ubuntu-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install '.[dev]' 'jax[cpu]'

      - name: Test with pytest
        run: |
          python -m pytest

  oldest-supported:
    needs: [format]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          python-version: "3.10"

      - name: Install the project
        run: uv sync --extra dev --resolution lowest-direct

      - name: Test package
        run: uv run --frozen pytest

  benchmark:
    needs: [format]
    runs-on: ubuntu-24.04
    if:
      github.event_name == 'workflow_dispatch' || (github.event_name ==
      'pull_request' && contains(github.event.pull_request.labels.*.name,
      'run-benchmarks')) || (github.event_name == 'push' && github.ref ==
      'refs/heads/main')
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install the project
        run: uv sync --extra dev

      - name: Run benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          token: ${{ secrets.CODSPEED_TOKEN }}
          run: uv run --frozen pytest tests/benchmark --codspeed
